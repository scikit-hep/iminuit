[build-system]
requires = ["scikit-build-core[pyproject]>=0.3", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "iminuit"
description = "Jupyter-friendly Python frontend for MINUIT2 in C++"
version = "2.22.0"
maintainers = [
    { name = "Hans Dembinski" },
    { email = "hans.dembinski@gmail.com" },
]
readme = "README.rst"
requires-python = ">=3.8"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
    "Programming Language :: C++",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
dependencies = [
    "numpy >= 1.21",
    "typing_extensions;python_version < '3.9'"
]

[project.urls]
repository = "http://github.com/scikit-hep/iminuit"
documentation = "https://iminuit.readthedocs.io"

[project.optional-dependencies]
test = [
    "coverage",
    "cython",
    # ipywidgets 8.0.5 and 8.0.6 are broken
    # see https://github.com/jupyter-widgets/ipywidgets/issues/3731
    "ipywidgets<8.0.5",
    "ipykernel",  # needed by ipywidgets 8.0.6
    "joblib",
    "jacobi",
    "matplotlib",
    "numpy",
    "numba",
    "numba-stats",
    "pytest",
    "scipy",
    "tabulate",
    "boost_histogram",
    "resample",
    "unicodeitplus"
]
doc = [
    "sphinx<7",
    "sphinx-rtd-theme",  # needs sphinx<7
    "nbsphinx",
    "nbconvert",
    "nbformat",
    "jupyter_client",
    "ipykernel",
    # There are some problems with current jax versions
    "jax",
    "jaxlib"
]

[tool.scikit-build]
minimum-version = "0.3"
build-dir = "build/{wheel_tag}"
sdist.exclude = [
    "extern/root",
]
sdist.include = [
    "extern/root/math/minuit2/inc",
    "extern/root/math/minuit2/src",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-q -ra --ff"
testpaths = ["tests"]
filterwarnings = [
    "error::numpy.VisibleDeprecationWarning",
    "error::DeprecationWarning",
]

[tool.ruff]
select = ["E", "F", "D"]
extend-ignore = ["D203", "D212"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"test_*.py" = ["B", "D"]
".ci/*.py" = ["D"]
"bench/*.py" = ["D"]
"doc/*.py" = ["D"]
"setup.py" = ["D"]
"cmake_ext.py" = ["D"]

[tool.mypy]
ignore_missing_imports = true
allow_redefinition = true
plugins = "numpy.typing.mypy_plugin"
pretty = true
files = ["src"]
no_implicit_optional = false

[tool.cibuildwheel]
# update skip when numpy wheels become available
skip = ["*-musllinux_*", "cp31?-win32", "cp31?-manylinux_i686"]
test-requires = "pytest"
test-command = "python -m pytest {package}/tests"
test-skip = ["*universal2:arm64"]
# to match numpy, we use manylinux2014 for cp310+
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"

[tool.cibuildwheel.environment]
# this makes sure that we build only on platforms that have a corresponding numpy wheel
PIP_ONLY_BINARY = ":all:"

[[tool.cibuildwheel.overrides]]
# to match numpy, we use manylinux2010 for cp36 to cp39
select = "cp3?-*"
manylinux-x86_64-image = "manylinux2010"
manylinux-i686-image = "manylinux2010"
