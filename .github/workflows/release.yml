name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release_check:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.out }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - if: ${{ github.ref == 'refs/heads/main' }}
        run: python .ci/release_check.py

      - id: tag
        run: echo "::set-output name=out::$(python .ci/get_tag.py)"

  wheels:
    needs: release_check
    name: ${{ matrix.py }} ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [auto, aarch64]
        py: [cp37, cp38, cp39, cp310, cp311]
        include:
          - os: macos-latest
            py: cp38
            arch: universal2
          - os: macos-latest
            py: cp39
            arch: universal2
          - os: macos-latest
            py: cp310
            arch: universal2
        exclude:
          - os: windows-latest
            arch: aarch64
          - os: macos-latest
            arch: aarch64
    env:
      CIBW_BUILD: ${{ matrix.py }}-*
      CIBW_ARCHS_LINUX: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v2

      - uses: pypa/cibuildwheel@v2.10.2
        env:
          CIBW_BUILD: ${{ matrix.py }}-*
          CIBW_ARCHS: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  sdist:
    needs: release_check
    name: source package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'

      - run: python -m pip install --upgrade pip wheel
      - run: python setup.py sdist

      - run: python -m pip install dist/iminuit-*
      - run: python -m pip install pytest
      - run: python -m pytest

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload:
    needs: [wheels, sdist]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{secrets.pypi_password}}

  release:
    needs: [release_check, upload]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3
      - uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.release_check.outputs.tag }}
          tag_name: v${{ needs.release_check.outputs.tag }}
          target_commitish: ${{ github.ref_name }}
          generate_release_notes: true
