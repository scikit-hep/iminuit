name: Test

on:
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '.ci/**'
      - '*.rst'

env:
  CMAKE_ARGS: -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
  # Latest Jupyter requires this to acknowledge deprecation
  JUPYTER_PLATFORM_DIRS: 1

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # version number must be string, otherwise 3.10 becomes 3.1
          - os: windows-latest
            python-version: "3.11"
          - os: macos-14
            python-version: "3.8"
          - os: ubuntu-latest
            python-version: "pypy-3.9"
          - os: ubuntu-latest
            python-version: "3.12"
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    # must come after checkout
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.python-version }}
    - uses: rui314/setup-mold@v1
      if: runner.os == 'Linux'
    # - uses: yezz123/setup-uv@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - run: pip install -v .[test]
    - run: python -m pytest
    - run: |
        pip uninstall numba
        pip install --upgrade --pre numpy scipy matplotlib
        python -m pytest
      if: matrix.python-version == '3.11' || matrix.python-version == '3.12'

  # aarch64:
  #   runs-on: ubuntu-latest
  #   env:
  #     py: /opt/python/cp309-cp309/bin/python
  #     img: quay.io/pypa/manylinux2014_aarch64
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: true
  #   - uses: docker/setup-qemu-action@v2
  #   - run: >
  #           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws
  #           ${{ env.img }}
  #           bash -exc '${{ env.py }} -m venv venv &&
  #           source venv/bin/activate &&
  #           python -m pip install --upgrade pip &&
  #           python -m pip install . pytest'
  #   - run: >
  #           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws
  #           ${{ env.img }}
  #           venv/bin/python -m pytest
